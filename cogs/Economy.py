import io
import json
from typing import Any
from discord import app_commands, ui
import discord
from discord import Interaction
from discord._types import ClientT
from discord.ext import commands
from discord.ext.commands import Context
from mysql import connector
import requests
from bs4 import BeautifulSoup as bs
import lxml
from PIL import Image, ImageDraw, ImageFont, ImageOps
from cogs.func_storage.func_eco import buy_1, buy_2, buy_3, buy_4, eco_profile, work_t, work_p
from os import system
from mysql.connector.errors import OperationalError
from cogs.func_storage.BD_function import BD_Bot

na = []
op = []
t = None

try:
    class Modal_Test_Post(ui.Modal, title=f'–°—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à —Ç–µ—Å—Ç/–ø–æ—Å—Ç'):
        link = ui.TextInput(label=f'–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É', placeholder='–°—Å—ã–ª–∫–∞...', style=discord.TextStyle.short)

        async def on_submit(self, inter: Interaction):
            await inter.response.defer(thinking=True, ephemeral=True)
            global na
            if na[0] == '—Ç–µ—Å—Ç':
                await work_t(inter=inter, test=str(self.link))
            elif na[0] == '–ø–æ—Å—Ç':
                await work_p(inter=inter, post=str(self.link))

            na.clear()

    class Select_test_post(ui.Select):
        def __init__(self):
            op = [
                discord.SelectOption(label='–¢–µ—Å—Ç', description='–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–µ—Å—Ç', value='test'),
                discord.SelectOption(label='–ü–æ—Å—Ç', description='–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç', value='post')
            ]

            super().__init__(placeholder='–í—ã–±–µ—Ä–∏ —á—Ç–æ —Ö–æ—á–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å', min_values=1, max_values=1, options=op)

        async def callback(self, inter: Interaction):
            global na
            if str(self.values[0]) == 'test':
                na.append('—Ç–µ—Å—Ç')
                await inter.response.send_modal(Modal_Test_Post())
            elif str(self.values[0]) == 'post':
                na.append('–ø–æ—Å—Ç')
                await inter.response.send_modal(Modal_Test_Post())

    class SelectMenu(ui.Select):
        def __init__(self):
            super().__init__(placeholder='–í—ã–±–µ—Ä–∏ —Ç–æ–≤–∞—Ä –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞', min_values=1, max_values=1, options=op)

        async def callback(self, inter: Interaction):
            cur = BD_Bot()

            bal = cur.get_(f"SELECT balance FROM accounts WHERE id = {inter.user.id}")['balance']
            cost = cur.get_(f"SELECT cost FROM shop WHERE id = {int(self.values[0])}")['cost']

            a = f'buy_{self.values[0]}'
            await eval(a)(bal, cost, inter)

            cur.close_()
            op.clear()

    class Menu_test_post(ui.View):
        def __init__(self):
            super().__init__()
            self.add_item(Select_test_post())

    class Menu_View(ui.View):
        def __init__(self):
            super().__init__()
            self.add_item(SelectMenu())

    class Views_Eco(ui.View):
        def __init__(self):
            super().__init__(timeout=None)

        # @ui.button(emoji='üìï', style=discord.ButtonStyle.green, row=1)
        # async def help_economy(self, inter: Interaction, button: ui.Button):
        #     await inter.response.defer(thinking=True, ephemeral=True)
        #     file = open('config/gude_economy.txt', 'r', encoding='utf-8')
        #     embed = discord.Embed(
        #         title='–ì–∞–π–¥-–±—É–∫ –∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –ø–æ "–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –ü–∏–∫—É–∫–æ"',
        #         description=file.read()
        #     )
        #     file.close()
        #     embed.add_field(
        #         name='?—ç–∫–æ_–ø—Ä–æ—Ñ–∏–ª—å',
        #         value='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à —ç–∫–æ –ø—Ä–æ—Ñ–∏–ª—å.'
        #     )
        #     embed.add_field(
        #         name='?—Å—Ç–∞—Ä—Ç',
        #         value='–í—ã–∑–≤–∞–≤ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π (–Ω–∞–≤–µ—Ä–Ω–æ) –≥–æ–Ω–æ—Ä–∞—Ä'
        #     )
        #     embed.add_field(
        #         name='?work_test (–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à —Ç–µ—Å—Ç)',
        #         value='–≤—ã –ø–æ–ª—É—á–∞–π—Ç–µ —Å–≤–æ–π –∑–∞—Ä–∞–±–∞—Ç–æ–∫ —Å —Ç–µ—Å—Ç–∞. –ö–æ—É–ª–¥–∞—É–Ω –∫–æ–º–∞–Ω–¥—ã == 5 –º–∏–Ω—É—Ç'
        #     )
        #     embed.add_field(
        #         name='?work_post (–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à –ø–æ—Å—Ç)',
        #         value='–≤—ã –ø–æ–ª—É—á–∞–π—Ç–µ —Å–≤–æ–π –∑–∞—Ä–∞–±–∞—Ç–æ–∫ —Å –ø–æ—Å—Ç–∞. –ö–æ—É–ª–¥–∞—É–Ω –∫–æ–º–∞–Ω–¥—ã == 5 –º–∏–Ω—É—Ç'
        #     )
        #     embed.add_field(
        #         name='?economy_top',
        #         value='–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–ø 20 —ç–∫–æ–Ω–æ–º–∏—Å—Ç–æ–≤'
        #     )
        #     embed.add_field(
        #         name='?—ç–∫–æ_–º–∞–≥–∞–∑–∏–Ω',
        #         value='–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–∞–≥–∞–∑–∏–Ω —Å –ø–æ–∫—É–ø–∫–æ–π —Ä–æ–ª–µ–π, —É—Å–ª—É–≥ –∏ —Ç–¥'
        #     )
        #
        #     await inter.edit_original_response(embed=embed)

        @ui.button(emoji='üí∞', style=discord.ButtonStyle.primary, row=1)
        async def start_economy(self, inter: Interaction, button: ui.Button):
            cur = BD_Bot()

            await inter.response.defer(thinking=True, ephemeral=True)
            row = cur.get_(f"SELECT * FROM accounts WHERE id = {inter.user.id}")
            if row["start_ec"] == 0:
                r = requests.get(f'https://pikuco.ru/profile/{row["authid"]}/')
                soup = bs(r.text, 'lxml')

                reting = int(soup.find("div", class_='col-xl-3 col-6 user_rating user_stat_block').find('p', class_='title').text)
                pos = int(soup.find('div', class_='col-xl-3 col-6 user_tests_passed user_stat_block').find('p', class_='title').text)

                bal = (reting*0.5)+(pos*0.5)
                cur.commit_(f"UPDATE accounts SET balance = balance + {bal} WHERE id = {inter.user.id}")
                cur.commit_(f"UPDATE accounts SET start_ec = 1 WHERE id = {inter.user.id}")
                await inter.edit_original_response(content="–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –≥–æ–Ω–æ—Ä–∞—Ä –≤ —Ä–∞–∑–º–µ—Ä–µ:**<:pikucoin:1139591723216027719>{bal}**!")
            else:
                embed = discord.Embed(
                    description='–ò–∑–≤–∏–∏–Ω—Ç–µ, –Ω–æ –≤—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –û–Ω–∞ –ø—Ä–∏–º–∏–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑!',
                    color=0xeb144c
                ).set_author(
                    name='–û—à–∏–±–∫–∞',
                    icon_url='https://media.discordapp.net/attachments/1175426440066498591/1195456379855573062/icons8--64.png?ex=65b40e83&is=65a19983&hm=110715400b7ff51b96309951ef3b843c61082d3028d8b1b68859839345c4892b&=&format=webp&quality=lossless&width=80&height=80'
                )

                await inter.edit_original_response(embed=embed)

            cur.close_()

        @ui.button(emoji='üñº', style=discord.ButtonStyle.primary, row=1)
        async def profile_economy(self, inter: Interaction, button: ui.Button):
            cur = BD_Bot()
            await inter.response.defer(thinking=True, ephemeral=True)

            row = cur.get_(f"SELECT authid FROM accounts WHERE id = {inter.user.id}")
            if row is None:
                await inter.edit_original_response(content='**–í–´ –ù–ï –ó–ê–†–ï–ì–ï–°–¢–†–ò–†–û–í–ê–õ–ò–°–¨!**')
            else:
                member = inter.user
                await eco_profile(member=member)

                await inter.edit_original_response(attachments=[discord.File(fp='config/user_card.png', filename='user_card.png')])

            cur.close_()

        @ui.button(emoji='üìä', style=discord.ButtonStyle.primary, row=1)
        async def economy_top(self, inter: Interaction, button: ui.Button):
            cur = BD_Bot()

            await inter.response.defer(thinking=True, ephemeral=True)
            counter = 0
            embed = discord.Embed(title='–¢–æ–ø 10 –≠–∫–æ–Ω–æ–º–∏—Å—Ç–æ–≤<:heartgreen:988022781201510410>')
            rows = cur.gets_("SELECT * FROM accounts ORDER BY balance DESC LIMIT 10")

            for row in rows:
                counter += 1
                embed.add_field(
                    name=f'{counter} –º–µ—Å—Ç–æ - `{row["name"]}`',
                    value=f'–ë–∞–ª–∞–Ω—Å: {row["balance"]}<:pikucoin:1139591723216027719>',
                    inline=False
                )

            await inter.edit_original_response(embed=embed)

            cur.close_()

        @ui.button(emoji='üíµ', style=discord.ButtonStyle.green, row=1)
        async def money_add(self, inter: Interaction, button: ui.Button):
            await inter.response.defer(thinking=True, ephemeral=True)
            embed = discord.Embed(
                title='–ù–∞ —á—Ç–æ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—à—å?',
                description='–†–µ—à–∞–π, –Ω–∞ —á–µ–º —Ç—ã –∑–∞—Ä–∞–±–æ—Ç–∞–µ—à—å —Å–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: –ù–∞ —Ç–µ—Å—Ç–µ, –∏–ª–∏ –Ω–∞ –ø–æ—Å—Ç–µ'
            )

            await inter.edit_original_response(embed=embed, view=Menu_test_post())

        @ui.button(emoji='üè™', style=discord.ButtonStyle.green, row=1)
        async def shop_pik(self, inter: Interaction, button: ui.Button):
            cur = BD_Bot()

            await inter.response.defer(thinking=True, ephemeral=True)
            global op
            rows = cur.gets_("SELECT * FROM shop")

            embed = discord.Embed(
                title='–ú–∞–≥–∞–∑–∏–Ω PIKUCO - –†–æ–ª–∏, —É—Å–ª—É–≥–∏ –∏ —Ç–¥',
                description='–î–ª—è –ø–æ–∫—É–ø–∫–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É ?buy (–Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞)'
            )

            for row in rows:
                op.append(discord.SelectOption(label=row['name'], description=row['description'], value=row['id']))
                embed.add_field(
                    name=f"{row['id']}# | {row['name']} = {row['cost']} –ü–∏–∫—É–ö–æ–∏–Ω–æ–≤",
                    value=row['description'],
                    inline=False
                )

            await inter.edit_original_response(embed=embed, view=Menu_View())

            cur.close_()

    class Economy(commands.Cog):
        def __init__(self, bot):
            self.bot = bot

        @commands.command(name='—ç–∫–æ_–Ω–∞—á–∞–ª–æ')
        @commands.is_owner()
        async def eco_admin_start(self, ctx: Context):
            embed = discord.Embed(
                description='## –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π Pikuco - –ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞\n'
                            f'–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –ø–∏–∫—É–∫–æ - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –¥–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä–µ –ø–∏–∫—É–∫–æ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —ç–∫–æ–Ω–æ–º–∏–∫–∏, –Ω–æ –≥–ª–∞–≤–Ω—ã–π —Ç–≤–æ–π –∑–∞—Ä–∞–±–æ—Ç–∫ - —ç—Ç–æ —Ç–≤–æ–∏ —Ç–µ—Å—Ç—ã –∏ –ø–æ—Å—Ç—ã.\n–û—Ç –∏—Ö –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –∑–∞–≤–∏—Å–∏—Ç —Ç–≤–æ–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫, –∞ —Ç–∞–∫–∂–µ —Ç—ã –º–æ–∂–µ—à—å —ç—Ç–æ—Ç –∑–∞—Ä–∞–±–∞—Ç–æ–∫ —É–¥–≤–∞–∏–≤–∞—Ç—å, —É—Ç—Ä–∏–∞–≤–∞—Ç—å –∏ —Ç–¥, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –µ—â–µ –±–æ–≥–∞—á–µ.\n'
                            f'- –ì–ª–∞–≤–Ω–∞—è –≤–∞–ª—é—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞ - –ü–∏–∫—É–∫–æ–∏–Ω—ã, –≤–æ—Ç —Ç–∞–∫–∏–µ <>.\n'
                            f'- –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π, —Å—Ç–∞–Ω–æ–≤–∏—Å—å –∫—Ä—É—á–µ.\n'
                            f'### –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–≥–æ –ø–∏–∫—É–∫–æ\n'
                            # f'- üìï - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–∞–π–¥ –ø–æ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–≥–æ –ø–∏–∫—É–∫–æ\n'
                            f'- üíµ - –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ —Ç–µ—Å—Ç–µ, –∏–ª–∏ –Ω–∞ –ø–æ—Å—Ç–µ\n'
                            f'- üè™ - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —ç–∫–æ-–º–∞–≥–∞–∑–∏–Ω, –≥–¥–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –º–Ω–æ–∂–µ—Ç–∏–ª–∏, –∏ –∫–∞—Å—Ç–æ–º–Ω—É—é —Ä–æ–ª—å\n'
                            f'- üí∞ - –ü–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—ã–π —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–∞–ø–∏—Ç–∞–ª (–ó–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∞—à–µ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤)\n'
                            f'- üñº - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–≥–æ –ø–∏–∫—É–∫–æ\n'
                            f'- üìä - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–ø 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –±–∞–ª–∞–Ω—Å—É',
                color=0xFFD00D
            )

            await ctx.send(embed=embed, view=Views_Eco())

        @commands.command(name='–ê–¥–º–∏–Ω_–ü–∞–Ω–µ–ª—å')
        @commands.has_permissions(administrator=True)
        async def list_admins_panels_economy(self, ctx):
            embed = discord.Embed(
                title='–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –ø–æ –≠–∫–æ–Ω–æ–º–∏–∫—É'
            )
            embed.add_field(
                name='?set_cash',
                value='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–ª-–≤–æ –ü–∏–∫—É–ö–æ–∏–Ω–æ–≤',
                inline=False
            )
            embed.add_field(
                name='?remove_cash',
                value='–£–±–∏—Ä–∞–µ—Ç –∫–æ–ª-–≤–æ –ü–∏–∫—É–ö–æ–∏–Ω–æ–≤',
                inline=False
            )
            embed.add_field(
                name='?set_change',
                value='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —à–∞–Ω—Å –≤ –∫–∞–∑–∏–Ω–æ',
                inline=False
            )
            await ctx.author.send(embed=embed)

        @commands.command()
        @commands.has_permissions(administrator=True)
        async def set_cash(self, ctx, cash: int = None, member: discord.Member = None):
            cur = BD_Bot()

            if (cash is None) and (member is None):
                embed = discord.Embed(
                    description='–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–µ—à–∞ –∏ –Ω–µ –≤—ã–±—Ä–∞–Ω –∏–≥—Ä–æ–∫',
                    color=0xeb144c
                ).set_author(
                    name='–û—à–∏–±–∫–∞',
                    icon_url='https://media.discordapp.net/attachments/1175426440066498591/1195456379855573062/icons8--64.png?ex=65b40e83&is=65a19983&hm=110715400b7ff51b96309951ef3b843c61082d3028d8b1b68859839345c4892b&=&format=webp&quality=lossless&width=80&height=80'
                )

                await ctx.send(embed=embed)
            else:
                if cash < 0:
                    embed = discord.Embed(
                        description='–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ 0',
                        color=0xeb144c
                    ).set_author(
                        name='–û—à–∏–±–∫–∞',
                        icon_url='https://media.discordapp.net/attachments/1175426440066498591/1195456379855573062/icons8--64.png?ex=65b40e83&is=65a19983&hm=110715400b7ff51b96309951ef3b843c61082d3028d8b1b68859839345c4892b&=&format=webp&quality=lossless&width=80&height=80'
                    )

                    await ctx.send(embed=embed)
                else:
                    cur.commit_(f"UPDATE accounts SET balance = balance + {cash} WHERE authid = {member.id}")
                    await ctx.send(f'–ë—ã–ª –ø—Ä–∏–±–∞–≤–ª–µ–Ω –±–∞–ª–∞–Ω—Å: **+{cash}<:pikucoin:1139591723216027719> –∏–≥—Ä–æ–∫—É {member}**')

            cur.close_()

        @commands.command()
        @commands.has_permissions(administrator=True)
        async def remove_cash(self, ctx, cash: int = None, member: discord.Member = None):
            cur = BD_Bot()

            if (cash is None) and (member is None):
                embed = discord.Embed(
                    description='–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–µ—à–∞ –∏ –Ω–µ –≤—ã–±—Ä–∞–Ω –∏–≥—Ä–æ–∫',
                    color=0xeb144c
                ).set_author(
                    name='–û—à–∏–±–∫–∞',
                    icon_url='https://media.discordapp.net/attachments/1175426440066498591/1195456379855573062/icons8--64.png?ex=65b40e83&is=65a19983&hm=110715400b7ff51b96309951ef3b843c61082d3028d8b1b68859839345c4892b&=&format=webp&quality=lossless&width=80&height=80'
                )

                await ctx.send(embed=embed)
            else:
                if cash < 0:
                    embed = discord.Embed(
                        description='–ó–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–Ω—å—à–µ 0',
                        color=0xeb144c
                    ).set_author(
                        name='–û—à–∏–±–∫–∞',
                        icon_url='https://media.discordapp.net/attachments/1175426440066498591/1195456379855573062/icons8--64.png?ex=65b40e83&is=65a19983&hm=110715400b7ff51b96309951ef3b843c61082d3028d8b1b68859839345c4892b&=&format=webp&quality=lossless&width=80&height=80'
                    )

                    await ctx.send(embed=embed)
                else:
                    cur.commit_(f"UPDATE accounts SET balance = balance-{cash} WHERE authid = {member.id}")
                    await ctx.send(f'–ë—ã–ª–æ —Å–Ω–∏–∂–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞: **-{cash}<:pikucoin:1139591723216027719> –∏–≥—Ä–æ–∫—É {member}**')

            cur.close_()

    async def setup(bot):
        await bot.add_cog(Economy(bot))

except OperationalError:
    ch = self.bot.get_channel(config.config.CHANNEL_REPORT)

    ch.send(embed=discord.Embed(
        title='–ë–æ—Ç –±—ã–ª –≤—ã–∫–ª—é—á–µ–Ω —Å —Ö–æ—Å—Ç–∞',
        description='–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞!',
        color=0xFFFFFF
    ))
    system("python reg.py")
    system('kill 1')